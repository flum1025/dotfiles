[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowHidden=1
  let g:NERDTreeWinSize = 20
  nnoremap <silent><C-e> :NERDTreeToggle<CR>
  nnoremap <F9> :NERDTree ~/Downloads<CR>
  nnoremap <F8> :NERDTree ~/Desktop<CR>
  noremap dir :NERDTree<CR>
  nnoremap sd :<C-u>tabnew<CR>:NERDTree<CR>
  let g:NERDTreeIgnore=['\.DS_Store$']
'''

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
  colorscheme onedark
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
let g:neoterm_default_mod = 'botright'
let g:neoterm_automap_keys = ',tt'
let g:neoterm_autoinsert = 1
let g:neoterm_size = 25
nnoremap <C-k> :Ttoggle<CR>
inoremap <C-k> <ESC>:Ttoggle<CR>
tnoremap <C-k> <C-\><C-n>:Ttoggle<CR>
tnoremap <silent> <ESC> <C-\><C-n>
tnoremap <silent> jj <C-\><C-n>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  call RequirePlugin('lightline.vimrc')
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
  call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
  call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
  call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
  call submode#map('bufmove', 'n', '', '>', '<C-w>>')
  call submode#map('bufmove', 'n', '', '<', '<C-w><')
  call submode#map('bufmove', 'n', '', '+', '<C-w>+')
  call submode#map('bufmove', 'n', '', '-', '<C-w>-')
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
hook_add = '''
  nmap <C-p> :Denite neoyank<CR>
'''

[[plugins]]
repo = 'glidenote/memolist.vim'
hook_add = '''
  call RequirePlugin('memolist.vimrc')
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {
  \ '_': {
    \ 'runner': 'vimproc',
  \ }
  \ }

  noremap <F4> :QuickRun<CR>
  inoremap <F4> <Esc>:QuickRun<CR>
'''

[[plugins]]
repo = 'osyo-manga/vim-over'
hook_add = '''
nnoremap <silent> <Leader>m :OverCommandLine<CR>
" カーソル下の単語をハイライト付きで置換
nnoremap sub :OverCommandLine<CR>%s/<C-r><C-w>//g<Left><Left>
" コピーした文字列をハイライト付きで置換
nnoremap subp y:OverCommandLine<CR>%s!<C-r>=substitute(@0, '!', '\\!', 'g')<CR>!!gI<Left><Left><Left>
'''

[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = '''
  if !isdirectory(expand('~/.fzf'))
    execute '!git clone https://github.com/junegunn/fzf.git ~/.fzf'
    execute '!~/.fzf/install --all'
  endif
'''
hook_add = '''
  nnoremap <leader>f :call FZFJumpFileFunc(expand("<cfile>"))<CR>
  vnoremap <leader>f :call FZFJumpFileFunc(GetSelectionText())<CR>
  call RequirePlugin('fzf.vimrc')
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  noremap fzf :GFiles<CR>
  nnoremap g,re :Rg<CR>
  nnoremap g,e :Rg <c-r><c-w><cr>
  vnoremap g,re :call FZGrep(GetSelectionText(), 0)<cr>
  call RequirePlugin('ripgrep.vimrc')
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = 'neomru.vim'
if = 'has("nvim")'
hook_add = '''
  nnoremap <silent> ,b :<C-u>Denite buffer<CR>
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
          \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
          \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
          \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
          \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
          \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
          \ denite#do_map('toggle_select').'j'
  endfunction
'''

[[plugins]]
repo = 'vim-scripts/open-browser.vim'
hook_add = '''
  let g:netrw_nogx = 1
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'tyru/open-browser-github.vim'
depends = 'open-browser.vim'
hook_add = '''
  let g:openbrowser_github_url_exists_check = 'ignore'
'''

[[plugins]]
repo = 'mg979/vim-visual-multi'

[[plugins]]
repo = 'nicwest/vim-camelsnek'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
  call RequirePlugin('coc.vimrc')
'''
